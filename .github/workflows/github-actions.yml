name: Github Actions
on:
  push: 
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  ci-init:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ubuntu-latest]
        node-version: [ 16.x ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install modules
        run: npm ci

      - name: Build project 
        run: |
          npm run build
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Check unit tests
        run: |
          npm run test
          if [ $? -ne 0 ]; then
            exit 1
          fi
    
      - name: Install chromium
        run: npx playwright install --with-deps chromium
      - name: Check e2e tests
        run: |
          npm run e2e
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Set status - Success
        # if: ${{ job.status == 'success' }}
        if: always()
        uses: github-script@4.1.1
        env:
          STATUS_NAME: 'CI'
          STATUS_DESCRIPTION: 'CI checks passed!'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.statuses.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: 'https://github.com/SergeyEzhin/unit-demo-cra',
              description: `${process.env.STATUS_DESCRIPTION} - Success`,
              context: process.env.STATUS_NAME
            })

      - name: Set status - Failure
        # if: ${{ job.status == 'failure' }}
        if: always() && failure()
        uses: github-script@4.1.1
        env:
          STATUS_NAME: 'CI'
          STATUS_DESCRIPTION: 'CI checks failed!'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.statuses.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'failure',
              target_url: 'https://github.com/SergeyEzhin/unit-demo-cra',
              description: `${process.env.STATUS_DESCRIPTION} - Failure`,
              context: process.env.STATUS_NAME
            })
     